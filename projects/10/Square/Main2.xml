<class>
  <keyword>CLASS</keyword>
  <identifier>Main</identifier>
  <symbol>{</symbol>
  <classVarDec>
    <keyword>STATIC</keyword>
    <keyword>BOOLEAN</keyword>
    <identifier>test</identifier>
    <symbol>;</symbol>
  </classVarDec>
  <subroutineDec>
    <keyword>FUNCTION</keyword>
    <keyword>VOID</keyword>
    <identifier>main</identifier>
    <symbol>(</symbol>
    <parameterList>
    </parameterList>
    <symbol>)</symbol>
    <subroutineBody>
      <symbol>{</symbol>
      <classVarDec>
        <keyword>VAR</keyword>
        <identifier>SquareGame</identifier>
        <identifier>game</identifier>
        <symbol>;</symbol>
      </classVarDec>
      <statements>
        <letStatement>
          <keyword>LET</keyword>
          <identifier>game</identifier>
          <symbol>=</symbol>
          <expression>
            <term>
              <identifier>SquareGame</identifier>
              <symbol>.</symbol>
              <identifier>new</identifier>
              <symbol>(</symbol>
              <expressionList>
              </expressionList>
              <symbol>)</symbol>
            </term>
          </expression>
          <symbol>;</symbol>
        </letStatement>
        <doStatement>
          <keyword>DO</keyword>
          <identifier>game</identifier>
          <symbol>.</symbol>
          <identifier>run</identifier>
          <symbol>(</symbol>
          <expressionList>
          </expressionList>
          <symbol>)</symbol>
          <symbol>;</symbol>
        </doStatement>
        <doStatement>
          <keyword>DO</keyword>
          <identifier>game</identifier>
          <symbol>.</symbol>
          <identifier>dispose</identifier>
          <symbol>(</symbol>
          <expressionList>
          </expressionList>
          <symbol>)</symbol>
          <symbol>;</symbol>
        </doStatement>
        <returnStatement>
          <keyword>RETURN</keyword>
          <symbol>;</symbol>
        </returnStatement>
      </statements>
      <symbol>}</symbol>
    </subroutineBody>
  </subroutineDec>
  <subroutineDec>
    <keyword>FUNCTION</keyword>
    <keyword>VOID</keyword>
    <identifier>more</identifier>
    <symbol>(</symbol>
    <parameterList>
    </parameterList>
    <symbol>)</symbol>
    <subroutineBody>
      <symbol>{</symbol>
      <classVarDec>
        <keyword>VAR</keyword>
        <keyword>INT</keyword>
        <identifier>i</identifier>
        <symbol>,</symbol>
        <identifier>j</identifier>
        <symbol>;</symbol>
      </classVarDec>
      <classVarDec>
        <keyword>VAR</keyword>
        <identifier>String</identifier>
        <identifier>s</identifier>
        <symbol>;</symbol>
      </classVarDec>
      <classVarDec>
        <keyword>VAR</keyword>
        <identifier>Array</identifier>
        <identifier>a</identifier>
        <symbol>;</symbol>
      </classVarDec>
      <statements>
        <ifStatement>
          <keyword>IF</keyword>
          <symbol>(</symbol>
          <expression>
            <term>
              <keyword>FALSE</keyword>
            </term>
          </expression>
          <symbol>)</symbol>
          <symbol>{</symbol>
          <statements>
            <letStatement>
              <keyword>LET</keyword>
              <identifier>s</identifier>
              <symbol>=</symbol>
              <expression>
                <term>
                  <string_constant>"string constant"</string_constant>
                </term>
              </expression>
              <symbol>;</symbol>
            </letStatement>
            <letStatement>
              <keyword>LET</keyword>
              <identifier>s</identifier>
              <symbol>=</symbol>
              <expression>
                <term>
                  <keyword>NULL</keyword>
                </term>
              </expression>
              <symbol>;</symbol>
            </letStatement>
            <letStatement>
              <keyword>LET</keyword>
              <identifier>a</identifier>
              <symbol>[</symbol>
              <expression>
                <term>
                  <int_const>1</int_const>
                </term>
              </expression>
              <symbol>]</symbol>
              <symbol>=</symbol>
              <expression>
                <term>
                  <identifier>a</identifier>
                  <symbol>[</symbol>
                  <expression>
                    <term>
                      <int_const>2</int_const>
                    </term>
                  </expression>
                  <symbol>]</symbol>
                </term>
              </expression>
              <symbol>;</symbol>
            </letStatement>
          </statements>
          <symbol>}</symbol>
          <keyword>ELSE</keyword>
          <symbol>{</symbol>
          <statements>
            <letStatement>
              <keyword>LET</keyword>
              <identifier>i</identifier>
              <symbol>=</symbol>
              <expression>
                <term>
                  <identifier>i</identifier>
                </term>
                <symbol>*</symbol>
                <term>
                  <symbol>(</symbol>
                  <expression>
                    <term>
                      <symbol>-</symbol>
                      <term>
                        <identifier>j</identifier>
                      </term>
                    </term>
                  </expression>
                  <symbol>)</symbol>
                </term>
              </expression>
              <symbol>;</symbol>
            </letStatement>
            <letStatement>
              <keyword>LET</keyword>
              <identifier>j</identifier>
              <symbol>=</symbol>
              <expression>
                <term>
                  <identifier>j</identifier>
                </term>
                <symbol>/</symbol>
                <term>
                  <symbol>(</symbol>
                  <expression>
                    <term>
                      <symbol>-</symbol>
                      <term>
                        <int_const>2</int_const>
                      </term>
                    </term>
                  </expression>
                  <symbol>)</symbol>
                </term>
              </expression>
              <symbol>;</symbol>
            </letStatement>
            <letStatement>
              <keyword>LET</keyword>
              <identifier>i</identifier>
              <symbol>=</symbol>
              <expression>
                <term>
                  <identifier>i</identifier>
                </term>
                <symbol>|</symbol>
                <term>
                  <identifier>j</identifier>
                </term>
              </expression>
              <symbol>;</symbol>
            </letStatement>
          </statements>
          <symbol>}</symbol>
        </ifStatement>
        <returnStatement>
          <keyword>RETURN</keyword>
          <symbol>;</symbol>
        </returnStatement>
      </statements>
      <symbol>}</symbol>
    </subroutineBody>
  </subroutineDec>
  <symbol>}</symbol>
</class>
